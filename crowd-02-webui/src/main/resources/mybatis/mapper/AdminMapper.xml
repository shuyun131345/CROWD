<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.atguigu.crowd.mapper.AdminMapper">
    <resultMap id="BaseResultMap" type="com.atguigu.crowd.entity.Admin">
        <id column="id" property="id"/>
        <result column="login_acct" property="loginAcct"/>
        <result column="user_pswd" property="userPswd"/>
        <result column="user_name" property="userName"/>
        <result column="email" property="email"/>
        <result column="create_time" property="createTime"/>
    </resultMap>

    <select id="selectByAcount" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from t_admin
        where
        <if test="acount != null and acount !=''">
            login_acct = #{acount}
        </if>
    </select>

    <select id="selectAdminListByKeyWord" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from t_admin
        <where>
            <if test="keyWord != null and keyWord !=''">
                login_acct like concat('%',#{keyWord},'%') or user_name like concat('%',#{keyWord},'%') or email like
                concat('%',#{keyWord},'%')
            </if>
        </where>
    </select>

    <delete id="deleteAdminById" parameterType="java.lang.Integer">
        delete
        from t_admin
        where id = #{id}
    </delete>


    <insert id="insertAdmin" parameterType="com.atguigu.crowd.entity.Admin">
        insert into t_admin
        <trim prefix="(" suffixOverrides="," suffix=")">
            <if test="loginAcct != null and loginAcct != ''">login_acct,</if>
            <if test="id != null">id,</if>
            <if test="userPswd != null and userPswd != ''">user_pswd,</if>
            <if test="userName != null and userName != ''">user_name,</if>
            <if test="email != null and email != ''">email,</if>
            <if test="createTime != null and createTime != ''">create_time,</if>
        </trim>
        <trim prefix="values(" suffixOverrides="," suffix=")">
            <if test="id != null">#{id},</if>
            <if test="loginAcct != null and loginAcct != ''">#{loginAcct},</if>
            <if test="userPswd != null and userPswd != ''">#{userPswd},</if>
            <if test="userName != null and userName != ''">#{userName},</if>
            <if test="email != null and email != ''">#{email},</if>
            <if test="createTime != null and createTime != ''">#{createTime},</if>
        </trim>
    </insert>


    <update id="updateAdminById" parameterType="com.atguigu.crowd.entity.Admin">
        update t_admin
        <trim prefix="set" suffixOverrides=",">
            <if test="id != null">id=#{id},</if>
            <if test="loginAcct != null and loginAcct != ''">login_acct=#{loginAcct},</if>
            <if test="userPswd != null and userPswd != ''">user_pswd=#{userPswd},</if>
            <if test="userName != null and userName != ''">user_name=#{userName},</if>
            <if test="email != null and email != ''">email=#{email},</if>
            <if test="createTime != null and createTime != ''">create_time=#{createTime},</if>
        </trim>
        <where>
            <if test="id != null">id=#{id}</if>
        </where>
    </update>


    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id, login_acct, user_pswd, user_name, email, create_time
    </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.atguigu.crowd.entity.AdminExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from t_admin
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from t_admin
        where id = #{id}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from t_admin
        where id = #{id}
    </delete>
    <delete id="deleteByExample" parameterType="com.atguigu.crowd.entity.AdminExample">
        delete from t_admin
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.atguigu.crowd.entity.Admin">
        insert into t_admin (id, login_acct, user_pswd,
                             user_name, email, create_time)
        values (#{id}, #{loginAcct}, #{userPswd},
                #{userName}, #{email}, #{createTime})
    </insert>
    <insert id="insertSelective" parameterType="com.atguigu.crowd.entity.Admin">
        insert into t_admin
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="loginAcct != null">
                login_acct,
            </if>
            <if test="userPswd != null">
                user_pswd,
            </if>
            <if test="userName != null">
                user_name,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id},
            </if>
            <if test="loginAcct != null">
                #{loginAcct},
            </if>
            <if test="userPswd != null">
                #{userPswd},
            </if>
            <if test="userName != null">
                #{userName},
            </if>
            <if test="email != null">
                #{email},
            </if>
            <if test="createTime != null">
                #{createTime},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.atguigu.crowd.entity.AdminExample" resultType="java.lang.Integer">
        select count(*) from t_admin
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update t_admin
        <set>
            <if test="record.id != null">
                id = #{record.id},
            </if>
            <if test="record.loginAcct != null">
                login_acct = #{record.loginAcct},
            </if>
            <if test="record.userPswd != null">
                user_pswd = #{record.userPswd},
            </if>
            <if test="record.userName != null">
                user_name = #{record.userName},
            </if>
            <if test="record.email != null">
                email = #{record.email},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update t_admin
        set id = #{record.id},
        login_acct = #{record.loginAcct},
        user_pswd = #{record.userPswd},
        user_name = #{record.userName},
        email = #{record.email},
        create_time = #{record.createTime}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.atguigu.crowd.entity.Admin">
        update t_admin
        <set>
            <if test="loginAcct != null">
                login_acct = #{loginAcct},
            </if>
            <if test="userPswd != null">
                user_pswd = #{userPswd},
            </if>
            <if test="userName != null">
                user_name = #{userName},
            </if>
            <if test="email != null">
                email = #{email},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
        </set>
        where id = #{id}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.atguigu.crowd.entity.Admin">
        update t_admin
        set login_acct  = #{loginAcct},
            user_pswd   = #{userPswd},
            user_name   = #{userName},
            email       = #{email},
            create_time = #{createTime}
        where id = #{id}
    </update>
</mapper>